封面                                                                            1
版权声明                                                                        3
内容提要                                                                        4
中文版序                                                                        6
译者序                                                                          8
译者简介                                                                        9
序                                                                              10
前言                                                                            12
致谢                                                                            14
关于本书                                                                        16
关于封面插图                                                                    20
目录                                                                            22
第一部分 Netty的概念及体系结构                                                   26
	第1章　Netty——异步和事件驱动                                                  27
		1.1 Java网络编程                                                                28
			1.1.1 Java NIO                                                                  29
			1.1.2 选择器                                                                    30
		1.2 Netty简介                                                                   30
			1.2.1 谁在使用Netty                                                             31
			1.2.2 异步和事件驱动                                                            32
		1.3 Netty的核心组件                                                             33
			1.3.1 Channel                                                                   33
			1.3.2 回调                                                                      33
			1.3.3 Future                                                                    34
			1.3.4 事件和ChannelHandler                                                      35
			1.3.5 把它们放在一起                                                            36
				1．Future、回调和ChannelHandler                                                 36
				2．选择器、事件和EventLoop                                                      37
		1.4 小结                                                                        37
	第2章　你的第一款Netty应用程序                                                  38
		2.1 设置开发环境                                                                38
			2.1.1 获取并安装Java开发工具包                                                  38
			2.1.2 下载并安装IDE                                                             39
			2.1.3 下载和安装Apache Maven                                                    39
			2.1.4 配置工具集                                                                40
		2.2 Netty客户端/服务器概览                                                      40
		2.3 编写Echo服务器                                                              41
			2.3.1 ChannelHandler和业务逻辑                                                  41
			2.3.2 引导服务器                                                                42
		2.4 编写Echo客户端                                                              45
			2.4.1 通过ChannelHandler实现客户端逻辑                                          45
			2.4.2 引导客户端                                                                46
		2.5 构建和运行Echo服务器和客户端                                                48
			2.5.1 运行构建                                                                  48
			2.5.2 运行Echo服务器和客户端                                                    51
		2.6 小结                                                                        53
	第3章　Netty的组件和设计                                                        54
		3.1 Channel、EventLoop和ChannelFuture                                           54
			3.1.1 Channel接口                                                               55
			3.1.2 EventLoop接口                                                             55
			3.1.3 ChannelFuture接口                                                         56
		3.2 ChannelHandler和ChannelPipeline                                             56
			3.2.1 ChannelHandler接口                                                        56
			3.2.2 ChannelPipeline接口                                                       57
			3.2.3 更加深入地了解ChannelHandler                                              58
			3.2.4 编码器和解码器                                                            59
			3.2.5 抽象类SimpleChannelInboundHandler                                         59
		3.3 引导                                                                        60
		3.4 小结                                                                        61
	第4章　传输                                                                     62
		4.1 案例研究：传输迁移                                                          62
			4.1.1 不通过Netty使用OIO和NIO                                                   63
			4.1.2 通过Netty使用OIO和NIO                                                     65
			4.1.3 非阻塞的Netty版本                                                         66
		4.2 传输API                                                                     67
		4.3 内置的传输                                                                  69
			4.3.1 NIO——非阻塞I/O                                                          70
			4.3.2 Epoll—用于Linux的本地非阻塞传输                                          71
			4.3.3 OIO—旧的阻塞I/O                                                          72
			4.3.4 用于JVM内部通信的Local传输                                                72
			4.3.5 Embedded传输                                                              73
		4.4 传输的用例                                                                  73
		4.5 小结                                                                        75
	第5章　ByteBuf                                                                  76
		5.1 ByteBuf的API                                                                76
		5.2 ByteBuf类——Netty的数据容器                                                77
			5.2.1 它是如何工作的                                                            77
			5.2.2 ByteBuf的使用模式                                                         77
				1．堆缓冲区                                                                     78
				2．直接缓冲区                                                                   78
				3．复合缓冲区                                                                   79
		5.3 字节级操作                                                                  81
			5.3.1 随机访问索引                                                              81
			5.3.2 顺序访问索引                                                              81
			5.3.3 可丢弃字节                                                                82
			5.3.4 可读字节                                                                  82
			5.3.5 可写字节                                                                  83
			5.3.6 索引管理                                                                  83
			5.3.7 查找操作                                                                  84
			5.3.8 派生缓冲区                                                                84
			5.3.9 读/写操作                                                                 86
			5.3.10 更多的操作                                                               88
		5.4 ByteBufHolder接口                                                           89
		5.5 ByteBuf分配                                                                 89
			5.5.1 按需分配：ByteBufAllocator接口                                            89
			5.5.2 Unpooled缓冲区                                                            91
			5.5.3 ByteBufUtil类                                                             91
		5.6 引用计数                                                                    91
		5.7 小结                                                                        92
	第6章　ChannelHandler和 ChannelPipeline                                         94
		6.1 ChannelHandler家族                                                          94
			6.1.1 Channel的生命周期                                                         94
			6.1.2 ChannelHandler的生命周期                                                  95
			6.1.3 ChannelInboundHandler接口                                                 95
			6.1.4 ChannelOutboundHandler接口                                                97
			6.1.5 ChannelHandler适配器                                                      98
			6.1.6 资源管理                                                                  98
		6.2 ChannelPipeline接口                                                         100
			6.2.1 修改ChannelPipeline                                                       102
			6.2.2 触发事件                                                                  103
		6.3 ChannelHandlerContext接口                                                   104
			6.3.1 使用ChannelHandlerContext                                                 106
			6.3.2 ChannelHandler和ChannelHandlerContext的高级用法                           108
		6.4 异常处理                                                                    110
			6.4.1 处理入站异常                                                              110
			6.4.2 处理出站异常                                                              111
		6.5 小结                                                                        112
	第7章　EventLoop和线程模型                                                      113
		7.1 线程模型概述                                                                113
		7.2 EventLoop接口                                                               114
			7.2.1 Netty 4中的I/O和事件处理                                                  116
			7.2.2 Netty 3中的I/O操作                                                        116
		7.3 任务调度                                                                    117
			7.3.1 JDK的任务调度API                                                          117
			7.3.2 使用EventLoop调度任务                                                     118
		7.4 实现细节                                                                    119
			7.4.1 线程管理                                                                  119
			7.4.2 EventLoop/线程的分配                                                      120
				1．异步传输                                                                     120
				2．阻塞传输                                                                     121
		7.5 小结                                                                        122
	第8章　引导                                                                     123
		8.1 Bootstrap类                                                                 123
		8.2 引导客户端和无连接协议                                                      125
			8.2.1 引导客户端                                                                126
			8.2.2 Channel和EventLoopGroup的兼容性                                           127
		8.3 引导服务器                                                                  128
			8.3.1 ServerBootstrap类                                                         128
			8.3.2 引导服务器                                                                129
		8.4 从Channel引导客户端                                                         131
		8.5 在引导过程中添加多个ChannelHandler                                          132
		8.7 引导DatagramChannel                                                         135
		8.8 关闭                                                                        136
		8.9 小结                                                                        136
	第9章　单元测试                                                                 137
		9.1 EmbeddedChannel概述                                                         137
		9.2 使用EmbeddedChannel测试ChannelHandler                                       139
			9.2.1 测试入站消息                                                              139
			9.2.2 测试出站消息                                                              142
		9.3 测试异常处理                                                                143
		9.4 小结                                                                        145
第二部分 编解码器                                                                146
	第10章　编解码器框架                                                            147
		10.1 什么是编解码器                                                             147
		10.2 解码器                                                                     147
			10.2.1 抽象类ByteToMessageDecoder                                               148
			10.2.2 抽象类ReplayingDecoder                                                   149
			10.2.3 抽象类MessageToMessageDecoder                                            150
			10.2.4 TooLongFrameException类                                                  152
		10.3 编码器                                                                     153
			10.3.1 抽象类MessageToByteEncoder                                               153
			10.3.2 抽象类MessageToMessageEncoder                                            154
		10.4 抽象的编解码器类                                                           155
			10.4.1 抽象类ByteToMessageCodec                                                 155
			10.4.2 抽象类MessageToMessageCodec                                              156
			10.4.3 CombinedChannelDuplexHandler类                                           159
		10.5 小结                                                                       160
	第11章　预置的ChannelHandler和编解码器                                          161
		11.1 通过SSL/TLS保护Netty应用程序                                               161
		11.2 构建基于Netty的HTTP/HTTPS应用程序                                          163
			11.2.1 HTTP解码器、编码器和编解码器                                             163
			11.2.2 聚合HTTP消息                                                             165
			11.2.3 HTTP压缩                                                                 166
			11.2.4 使用HTTPS                                                                167
			11.2.5 WebSocket                                                                168
		11.3 空闲的连接和超时                                                           170
		11.4 解码基于分隔符的协议和基于长度的协议                                       172
			11.4.1 基于分隔符的协议                                                         172
			11.4.2 基于长度的协议                                                           175
		11.5 写大型数据                                                                 177
		11.6 序列化数据                                                                 179
			11.6.1 JDK序列化                                                                179
			11.6.2 使用JBoss Marshalling进行序列化                                          179
			11.6.3 通过Protocol Buffers序列化                                               181
		11.7 小结                                                                       182
第三部 分网络协议                                                                183
	第12章　WebSocket                                                               184
		12.1 WebSocket简介                                                              184
		12.2 我们的WebSocket示例应用程序                                                185
		12.3 添加WebSocket支持                                                          186
			12.3.1 处理HTTP请求                                                             186
			12.3.2 处理WebSocket帧                                                          189
			12.3.3 初始化ChannelPipeline                                                    190
			12.3.4 引导                                                                     192
		12.4 测试该应用程序                                                             194
			如何进行加密                                                                    195
		12.5 小结                                                                       197
	第13章　使用UDP广播事件                                                         198
		13.1 UDP的基础知识                                                              198
		13.2 UDP广播                                                                    199
		13.3 UDP示例应用程序                                                            199
		13.4 消息POJO: LogEvent                                                         200
		13.5 编写广播者                                                                 201
		13.6 编写监视器                                                                 206
		13.7 运行LogEventBroadcaster和LogEventMonitor                                   208
		13.8 小结                                                                       210
第四部 分案例研究                                                                211
	第14章　案例研究，第一部分                                                      212
		14.1 Droplr——构建移动服务                                                     212
			14.1.1 这一切的起因                                                             212
			14.1.2 Droplr是怎样工作的                                                       213
			14.1.3 创造一个更加快速的上传体验                                               213
			14.1.3.1	1．乐观且看似更加简单的方案                                                     214
			14.1.3.2	2．安全但复杂的方案                                                             214
			14.1.4 技术栈                                                                   215
			14.1.4.1	1．基本要素：服务器和流水线                                                     215
			14.1.4.2	2．请求处理器                                                                   217
			14.1.4.3	3．父接口                                                                       217
			14.1.4.4	4．处理器的实现                                                                 218
			14.1.4.5	5．上传请求处理器                                                               218
			14.1.5 性能                                                                     218
			14.1.6 小结——站在巨人的肩膀上                                                 219
		14.2 Firebase——实时的数据同步服务                                             219
			14.2.1 Firebase的架构                                                           220
			14.2.2 长轮询                                                                   220
			14.2.2.1	1．保证消息的按顺序投递                                                         221
			14.2.2.2	2．关闭通知                                                                     222
			14.2.3 HTTP 1.1 keep-alive和流水线化                                            223
			14.2.4 控制SslHandler                                                           224
			14.2.5 Firebase小结                                                             226
		14.3 Urban Airship——构建移动服务                                              226
			14.3.1 移动消息的基础知识                                                       226
			14.3.2 第三方递交                                                               227
			14.3.3 使用二进制协议的例子                                                     228
			14.3.4 直接面向设备的递交                                                       230
			14.3.5 Netty擅长管理大量的并发连接                                              231
			14.3.6 Urban Airship小结—跨越防火墙边界                                        232
			14.3.6.1	1．内部的RPC框架                                                                232
			14.3.6.2	2．负载和性能测试                                                               232
			14.3.6.3	3．同步协议的异步客户端                                                         232
		14.4 小结                                                                       233
	第15章　案例研究，第二部分                                                      234
		15.1 Netty在Facebook的使用：Nifty和Swift0F                                      234
			15.1.1 什么是Thrift                                                             234
			15.1.2 使用Netty改善Java Thrift的现状                                           235
			15.1.3 Nifty服务器的设计                                                        236
			15.1.3.1	1．Nifty的编码器/解码器                                                         236
			15.1.3.2	2．在服务器上排序响应                                                           237
			15.1.4 Nifty异步客户端的设计                                                    239
			15.1.4.1	1．流水线化                                                                     239
			15.1.4.2	2．多路复用                                                                     239
			15.1.5 Swift：一种更快的构建Java Thrift服务的方式                               240
			15.1.6 结果                                                                     240
			15.1.6.1	1．性能比较                                                                     240
			15.1.6.2	2．稳定性问题的例子                                                             241
			15.1.6.3	3．改进C++实现的超时处理                                                        242
			15.1.6.4 4．未来基于Netty 4的改进                                                        242
			15.1.7 Facebook小结                                                             243
		15.2 Netty在Twitter的使用：Finagle                                              243
			15.2.1 Twitter成长的烦恼                                                        243
			15.2.2 Finagle的诞生                                                            243
			15.2.3 Finagle是如何工作的                                                      244
			15.2.3.1	Netty/Finagle桥接器                                                             245
			15.2.4 Finagle的抽象                                                            249
			15.2.5 故障管理                                                                 250
			15.2.6 组合服务                                                                 251
			15.2.7 未来：Netty                                                              251
			15.2.8 Twitter小结                                                              252
		15.3 小结                                                                       252
	附录　Maven介绍                                                                 253
		A.1 什么是Maven                                                                 253
			A.1.1 安装和配置Maven                                                           254
			A.1.2 Maven的基本概念                                                           254
			A.1.2.1	1．标准的目录结构                                                               254
			A.1.2.2	2．POM大纲                                                                      255
			A.1.2.3	3．构件                                                                         255
			A.1.2.4	4．POM文件的用例                                                                256
			A.1.2.5	5．GAV坐标                                                                      256
			A.1.2.6	6．依赖                                                                         257
			A.1.2.7	7．依赖管理                                                                     258
			A.1.2.8	8．构建的生命周期                                                               259
			A.1.2.9	9．插件                                                                         260
			A.1.2.10	10．插件管理                                                                    261
			A.1.2.11	11．配置文件                                                                    262
			A.1.2.12	12．存储库                                                                      262
			A.1.2.13	13．快照和发布                                                                  263
		A.2 POM示例                                                                     263
			A.2.1 一个项目的POM                                                             263
			A.2.2 POM的继承和聚合                                                           264
			A.2.2.1	1．POM继承                                                                      265
			A.2.2.2	2．POM聚合                                                                      265
		A.3 Maven命令行                                                                 268
		A.4 小结                                                                        269
	封底                                                                            272
