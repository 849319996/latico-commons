目录	9
第一部分　核心实现	12
第1章　Spring整体架构和环境搭建	13
	1.1　Spring的整体架构	13
	1.2　环境搭建	15
		1.2.1　安装GitHub	15
		1.2.2　安装Gradle	16
		1.2.3　下载Spring	17
第2章　容器的基本实现	21
	2.1　容器基本用法	21
	2.2　功能分析	22
	2.3　工程搭建	23
	2.4　Spring的结构组成	24
		2.4.1　beans包的层级结构	24
		2.4.2　核心类介绍	24
	2.5　容器的基础XmlBeanFactory	28
		2.5.1　配置文件封装	29
		2.5.2　加载Bean	32
	2.6　获取XML的验证模式	35
		2.6.1　DTD与XSD区别	35
		2.6.2　验证模式的读取	37
	2.7　获取Document	39
		2.7.1　EntityResolver用法	40
	2.8　解析及注册BeanDefinitions	42
		2.8.1　profile属性的使用	43
		2.8.2　解析并注册BeanDefinition	44
第3章　默认标签的解析	46
	3.1　bean标签的解析及注册	46
		3.1.1　解析BeanDefinition	48
		3.1.2　AbstractBeanDefinition属性	66
		3.1.3　解析默认标签中的自定义标签元素	69
		3.1.4　注册解析的BeanDefinition	71
		3.1.5　通知监听器解析及注册完成	74
	3.2　alias标签的解析	74
	3.3　import标签的解析	76
	3.4　嵌入式beans标签的解析	78
第4章　自定义标签的解析	79
	4.1　自定义标签使用	80
	4.2　自定义标签解析	82
		4.2.1　获取标签的命名空间	83
		4.2.2　提取自定义标签处理器	83
		4.2.3　标签解析	85
第5章　bean的加载	89
	5.1　FactoryBean的使用	94
	5.2　缓存中获取单例bean	96
	5.3　从bean的实例中获取对象	97
	5.4　获取单例	101
	5.5　准备创建bean	103
		5.5.1　处理ovverride属性	104
		5.5.2　实例化的前置处理	105
	5.6　循环依赖	107
		5.6.1　什么是循环依赖	107
		5.6.2　Spring如何解决循环依赖	107
	5.7　创建bean	111
		5.7.1　创建bean的实例	114
		5.7.2　记录创建bean的ObjectFactory	123
		5.7.3　属性注入	126
		5.7.4　初始化bean	135
		5.7.5　注册DisposableBean	139
第6章　容器的功能扩展	140
	6.1　设置配置路径	141
	6.2　扩展功能	141
	6.3　环境准备	143
	6.4　加载BeanFactory	144
		6.4.1　定制BeanFactory	146
		6.4.2　加载BeanDefinition	147
	6.5　功能扩展	148
		6.5.1　增加SPEL语言的支持	149
		6.5.2　增加属性注册编辑器	150
		6.5.3　添加ApplicationContext AwareProcessor处理器	155
		6.5.4　设置忽略依赖	157
		6.5.5　注册依赖	157
	6.6　BeanFactory的后处理	157
		6.6.1　激活注册的BeanFactory PostProcessor	158
		6.6.2　注册BeanPostProcessor	164
		6.6.3　初始化消息资源	167
		6.6.4　初始化ApplicationEvent Multicaster	170
		6.6.5　注册监听器	172
	6.7　初始化非延迟加载单例	173
	6.8　finishRefresh	176
第7章　AOP	178
	7.1　动态AOP使用示例	178
	7.2　动态AOP自定义标签	180
		7.2.1　注册AnnotationAwareAspectJ AutoProxyCreator	181
	7.3　创建AOP代理	184
		7.3.1　获取增强器	187
		7.3.2　寻找匹配的增强器	197
		7.3.3　创建代理	198
	7.4　静态AOP使用示例	212
	7.5　创建AOP静态代理	214
		7.5.1　Instrumentation使用	214
		7.5.2　自定义标签	218
		7.5.3　织入	220
第二部分　企业应用	224
第8章　数据库连接JDBC	225
	8.1　Spring连接数据库程序实现(JDBC)	226
	8.2　save/update功能的实现	228
		8.2.1　基础方法execute	230
		8.2.2　Update中的回调函数	234
	8.3　query功能的实现	236
	8.4　queryForObject	240
第9章　整合MyBatis	242
	9.1　MyBatis独立使用	242
	9.2　Spring整合MyBatis	246
	9.3　源码分析	248
		9.3.1　sqlSessionFactory创建	248
		9.3.2　MapperFactoryBean的创建	252
		9.3.3　MapperScannerConfigurer	255
第10章　事务	265
	10.1　JDBC方式下的事务使用 示例	265
	10.2　事务自定义标签	268
		10.2.1　注册InfrastructureAdvisor AutoProxyCreator	268
		10.2.2　获取对应class/method的增强器	272
	10.3　事务增强器	280
		10.3.1　创建事务	282
		10.3.2　回滚处理	292
		10.3.3　事务提交	298
第11章　SpringMVC	302
	11.1　SpringMVC快速体验	302
	11.2　ContextLoaderListener	306
		11.2.1　ServletContextListener的使用	306
		11.2.2　Spring中的ContextLoader Listener	307
	11.3　DispatcherServlet	311
		11.3.1　servlet的使用	312
		11.3.2　DispatcherServlet的初始化	313
		11.3.3　WebApplicationContext的初始化	315
	11.4　DispatcherServlet的逻辑处理	331
		11.4.1　MultipartContent类型的request处理	337
		11.4.2　根据request信息寻找对应的Handler	338
		11.4.3　没找到对应的Handler的错误处理	342
		11.4.4　根据当前Handler寻找对应的HandlerAdapter	342
		11.4.5　缓存处理	343
		11.4.6　HandlerInterceptor的处理	344
		11.4.7　逻辑处理	345
		11.4.8　异常视图的处理	345
		11.4.9　根据视图跳转页面	346
第12章　远程服务	351
	12.1　RMI	351
		12.1.1　使用示例	351
		12.1.2　服务端实现	353
		12.1.3　客户端实现	361
	12.2　HttpInvoker	366
		12.2.1　使用示例	367
		12.2.2　服务端实现	368
		12.2.3　客户端实现	372
第13章　Spring消息	378
	13.1　JMS的独立使用	378
	13.2　Spring整合ActiveMQ	380
	13.3　源码分析	382
		13.3.1　JmsTemplate	383
		13.3.2　监听器容器	387
