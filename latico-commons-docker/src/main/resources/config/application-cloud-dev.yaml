server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: demo
    #安全认证配置
  security:
    user:
      name: admin
      password: admin
  #配置数据源
  datasource:
    #    默认数据源，主数据源
    defaultdb:
      name: defaultdb
      #druid相关配置
      #监控统计拦截的filters
      filters: stat
      #      driver-class-name: com.mysql.cj.jdbc.Driver
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性，如果是使用druid，那么必须是url，如果是springboot2.0的默认数据源，那么是jdbc-url
      url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: root
      password: root
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      #      type，目前没发现能起什么作用
      type: com.alibaba.druid.pool.DruidDataSource
    #      第二个数据源
    db2:
      name: db2
      #druid相关配置
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性
      url: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: root
      password: root
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      #      type，目前没发现能起什么作用
      type: com.alibaba.druid.pool.DruidDataSource

#  指定mybatis映射文件的地址，多数据源已经在java代码处理
#  mybatis:
#  mapper-locations: classpath:mapper/**/*.xml
#  type-aliases-package: com.latico.archetype.springboot.dao.entity

logging:
  #  引入日志配置文件,logback的jar跟log4j2的jar不能共存，日志配置根据实际情况配置

  #  如果是使用jar方式启动
  config: classpath:config/logback-spring.xml

  #  如果是使用外部web容器方式启动，使用该日志,但是不生效，只会读取类路径根目录下规范配置
  #  config: classpath:log4j2.xml

  #  配置包的日志打印等级
#  level:
#    com.latico.archetype.springboot: DEBUG
#    com.latico.commons: INFO

#  是否启动swagger
swagger:
  show: true

#http编码配置
http:
  encoding:
    charset: UTF-8
    force: true
    enabled: true

eureka:
  instance:
    preferIpAddress: true
    # 每隔10s发送一次心跳
    lease-renewal-interval-in-seconds: 10
    # 告知服务端30秒还未收到心跳的话，就将该服务移除列表
    lease-expiration-duration-in-seconds: 30
    #    eureka的管理页面中的注册客户端列表的status字段显示的内容，设置显示swagger
    statusPageUrl: http://${spring.security.user.name}:${spring.security.user.password}@${spring.cloud.client.ip-address:localhost}:${server.port}/swagger-ui.html
  client:
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8000/eureka/